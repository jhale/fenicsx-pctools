[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "fenicsx_pctools"
version = "0.9.0"
description = "FEniCSx Preconditioning Tools"
authors = [
    {name = "Martin Rehor", email="martin.rehor@rafinex.com"},
    {name = "Jack S. Hale", email = "jack.hale@uni.lu"}
]
license = {file = "COPYING"}
readme = "README.rst"
requires-python = ">=3.9"

keywords = ["FEniCS", "preconditioning", "PETSc", "block systems"]

classifiers = [
    "Topic :: Software Development"
]

dependencies = [
    "fenics-dolfinx>=0.9.0,<0.10.0.dev0",
    "petsc4py"
]

[project.optional-dependencies]
docs = [
    "myst-parser",
    "jupytext",
    "sphinx",
    "sphinx_rtd_theme",
    "sphinxcontrib-bibtex",
]
examples = [
    "matplotlib",
    "pandas",
]
lint = [
    "ruff"
]
ci = [
    "fenicsx_pctools[docs]",
    "fenicsx_pctools[examples]",
    "fenicsx_pctools[lint]",
    "pytest"
]

[tool.setuptools]
packages = ["fenicsx_pctools", "fenicsx_pctools.mat", "fenicsx_pctools.pc"]

[project.urls]
repository = "https://gitlab.com/rafinex-external-rifle/fenicsx_pctools"

[tool.pytest.ini_options]
minversion = "6.2"
testpaths = ["tests"]

[tool.ruff]
line-length = 100
indent-width = 4

[tool.ruff.lint]
select = [
      "E", # pycodestyle
      "W", # pycodestyle
      "F", # pyflakes
      "I",   # isort - use standalone isort
      "RUF", # Ruff-specific rules
      "UP",  # pyupgrade
      "ICN", # flake8-import-conventions
      "NPY", # numpy-specific rules
      "FLY", # use f-string not static joins
]

[tool.ruff.lint.isort]
known-first-party = ["basix", "dolfinx", "ffcx", "ufl"]
known-third-party = ["gmsh", "numba", "numpy", "pytest", "pyvista"]
section-order = [
      "future",
      "standard-library",
      "mpi",
      "third-party",
      "first-party",
      "local-folder",
]

[tool.ruff.lint.isort.sections]
"mpi" = ["mpi4py", "petsc4py"]
